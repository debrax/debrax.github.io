[ { "title": "DevFest Strasbourg 2024", "url": "/posts/devfest-strasbourg-2024/", "categories": "Conferences", "tags": "", "date": "2024-11-21 00:00:00 +0100", "snippet": "Notes personnelles après le DevFest Strasbourg 2024.Idée pour réduire l’empreinte environnementale du numérique par 4Tristant Nitot (ex Mozilla, W3C, comités numériques…) Loi de Moore (1965) : le nombre de transistors d’un microprocesseur double tous les deux ans Loi de Wirth (1995) : les programmes ralentissent plus vite que le matériel n’accélère Poids page web x150 sur 25 ans, mémoire Office x170 sur 20 ans Affichage plus rapide sur Apple II de 1983 que Lenovo X1 “Ce qu’Intel donne, Microsoft le reprend” 50 ans lucratifs pour l’industrie Ajout effréné de fonctionnalités peu performantes grâce à nouvelle puissance 80% smartphones “ralentis” pourtant fonctionnels jetés après 3 ans ! Système non tenable à cause du changement climatique +3°C selon GIEC en 2100 (+4 en France) malgré “efforts” actuels +1,5°C visé par accord de Paris que si réduction drastique Loi d’erooM (effort radicalement organisé d’optimisation en masse, Tristant Nitot) : optimiser d’un facteur 2 tous les 2 ans =&amp;gt; plus besoin de nouveau matériel Méthodo développeur : maintenabilité vs perf Junior : se former (craft) pour arriver à maintenable mais peu performant Sénior : optimiser (erooM) pour arriver au meilleur compromis maintenabilité/perf Le produit entre la qualité et l’over-engineeringJihène Mejri (Bforbank) Expérience courante : qualité visée mais surcomplexité/perfs dégradées au final Qualité parfois mesurée avec indicateurs “pastèques” (vert extérieur, rouge intérieur) Triangle QCD classique : qualité vs rapidité vs coût DORA (DevOps Research &amp;amp; Assessment) plus récent : fiabilité (qualité) vs rendement (rapidité) 4 métriques DORA (+ 24 capabilities dans livre Accelerate) DF (deployment frequency) = fréquence de déploiements sur une période =&amp;gt; rendement MLTC (mean lead time to change) = temps moyen entre décision et déploiement d’un sujet =&amp;gt; rendement MTTR (mean time to recovery) = temps moyen entre découverte problème prod et résolution =&amp;gt; fiabilité CFR (changement failure rate) = nombre d’incidents/nombre de déploiements =&amp;gt; fiabilité Comment éviter l’over-engineering Eviter “bonnes pratiques” aveugles, notamment DRY technique“Duplication is far cheaper than the wrong abstraction”, Sandi Metz Ne pas être dogmatique, s’adapter au contexte, rester simple (YAGNI, KISS) Se méfier du code générique Craft, TDD, DDD… Faut-il culpabiliser de ne pas en faire ?Matthieu Lempereur (freelance PHP) LinkedIn auj : “les bons développeurs font du (TDD, BDD, trunk based development, pair/mob programming, no estimate…)” Mais contraintes réelles : organisation entreprise, culture technique et compétences équipe “Bonnes pratiques” = puits sans fond Pratiques = choix d’équipe (chacun a son opinion !) Expérimenter et trouver ce qui fonctionne pour son équipe Même objectif au fond : développer une app optimale pour ses utilisateursLe monde a besoin de hackersMathis Hammel (formateur IA/cybersécurité) Hack = curiosité, créativité, partage (sans connotation négative) Dernier projet : jouer à doom sur croix de pharmacie (partage youtube) Ca sert à quoi ? Hobby fun mais retombées réelles Jobs et Wozniak vendent des boîtiers pour hacker le téléphone pendant 3 ans avant de créer Apple Mathis joue avec la lib random python avant d’améliorer ses perfs Mathis développe un catalogue des fausses photos de profil qui permet de démanteler des réseaux d’ingérence sur X et LinkedIn Marcus Hutchins achète un domaine étrange en dur dans le ransomware WannaCry ce qui le désactive Petits projets persos pour apprendre vite Chance dans la tech : explorer, réinventer, partagerFondamentaux du développement webBertrand Delacrétaz (Adobe, ex board Apache) Web d’apparence simple : client (HTML, CSS, JS) communique avec serveur via HTTP Mais nombreux fondamentaux requis pour site web grand public solide Plateforme Web : utiliser HTML, CSS et JS modernes (doc MDN, compatibilité caniuse.com) Apparence : HTML sémantique, reste avec CSS, responsive (80% trafic mobile) Ne pas oublier UX, i18n et a11y Images : optimiser formats de l’ordi fibré au smartphone en mouvement Vidéos : proposer streaming adaptatif pour lecture immédiate Sécurité : utiliser CORS et HTTPS, se protéger des XSS, CSRF, DDoS… Performance : lent = pas sérieux voire perte commerciale =&amp;gt; optimiser Core Web Vitals Utiliser caches navigateur et HTTP, CDN Lean &amp;amp; mean : supprimer l’inutile, viser la simplicité HTML first, CSS next, JS minimal Pas de framework JS si temps de visite très court Bruno, le Postman killer ?Alan Duchene (freelance) Postman = outil dév API très complet dans le cloud (leader) Bruno = client d’API simple, open source et hors ligne (startup) Avantages Bruno Hors ligne =&amp;gt; sécurisé et performant Tout est fichier =&amp;gt; partage via git Module de tests dans version payante ? Mais Alan n’a pas encore d’XP en prod10 fonctionnalités utiles du web que vous ne connaissez pasOlivier Leplus (AWS) Baseline = initiative Google pour pousser les navigateurs à implémenter les nouveautés HTML, CSS et JS Quelques nouveautés citées JS temporal API : module de date plus fiable et complet JS array : utils fonctionnels, for await… JS promises : utils JS compression stream : zip dans navigateur ! CSS @property : typage propriété CSS relative color : hsl(from otherColor … CSS vertical align : { align-content: center } CSS columns : .container{columns: 250px;} img{width: 100%;} =&amp;gt; colonnes img responsive CSS attr() : accès dynamique attribut HTML ! JS private prop : # pour marquer prop privé JS ??= : valorisé si nul (comme C#) JS Error cause : propagation erreur Node test : module de test natif dans nodeJs " }, { "title": "DevFest Strasbourg 2023", "url": "/posts/devfest-strasbourg-2023/", "categories": "Conferences", "tags": "", "date": "2023-11-15 00:00:00 +0100", "snippet": "Notes personnelles après le DevFest Strasbourg 2023.Tech eSportTimothée Malossane (ZQSD) “Ne pas afficher les instabilités” : image plus écornée par petit bug que par absenceSimplicitéBertrand Delacrétaz (Adobe &amp;amp; Apache) “Simplicité splendide et évidente” : lego, couteau suisse… Simple != simpliste, ne pas faire de raccourci Simplicité importante, quête continuelle, à inclure dans spécs Découper problème complexe en sous-problèmes simples Se méfier des frameworks, convaincre avec des POC/articlesChopping monolithNicolas Fränkel (APISIX) Micro-services : uniquement applicables à des équipes produit autonomes Changement organisationnel très difficile (process, middle management…) Migration technique aussi, pour peu de gains Idée : migrer uniquement les modules qui changent souvent (moteur promo par ex)Culte du cargoElizabeth Zaslavsky (IPPON) “Reproduire un comportement sans le comprendre en espérant obtenir le même résultat” Agile : “build the right thing”, 4 valeurs, qq principes, infinité de pratiques (dont SCRUM) Software craft : “build the thing right”, 4 valeurs, qq principes, infinité de pratiques (dont DDD) Cercle vicieux du culte du cargo agile ou craft : appliquer des pratiques (SCRUM, DDD) sans comprendre leurs valeurs apportent peu de résultats Idée : amélioration continue des vrais problèmes dans leur contexte (les “bonnes pratiques” universelles n’existent pas !) Idée : unir vision métier et technique pour qualité logicielle bénéfique à tous Idée : convertir équipe avant organisation pour transition progressiveBus factorLuc Dehand (Davidson) “Quel risque pour l’équipe si X doit la quitter ?” Si réduit : équipe plus résiliente/sereine, absences mieux gérées… Visualisation via cartographie connaissances métier et compétences techniques Capitalisation via automatisation/outillage si possible, doc… Partage connaissances via pair programming, formation, wiki par l’apprenant…Castors juniorAmbre Person (Sopra Steria) Principes SOLID avec démo simple Dans la vraie vie, refacto essentiel pour réduire risques et corriger erreurs de design Légitimer refacto par ticket explicite Cadrer refacto avec objectif clair et limite de temps" } ]
